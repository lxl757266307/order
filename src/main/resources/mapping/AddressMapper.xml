<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xue.order.dao.AddressMapper" >
  <resultMap id="BaseResultMap" type="com.xue.order.pojo.Address" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PROVINCE" property="province" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="ADDRESS_NAME" property="addressName" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="IS_DEFAULT" property="isDefault" jdbcType="INTEGER" />
    <result column="REMARK1" property="remark1" jdbcType="VARCHAR" />
    <result column="REMARK2" property="remark2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, PROVINCE, CITY, ADDRESS_NAME, USER_ID, IS_DEFAULT, REMARK1, REMARK2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xue.order.pojo.AddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ADDRESS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xue.order.pojo.AddressExample" >
    delete from ADDRESS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xue.order.pojo.Address" >
    insert into ADDRESS (ID, PROVINCE, CITY, 
      ADDRESS_NAME, USER_ID, IS_DEFAULT, 
      REMARK1, REMARK2)
    values (#{id,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{addressName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{isDefault,jdbcType=INTEGER}, 
      #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xue.order.pojo.Address" >
    insert into ADDRESS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="province != null" >
        PROVINCE,
      </if>
      <if test="city != null" >
        CITY,
      </if>
      <if test="addressName != null" >
        ADDRESS_NAME,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="isDefault != null" >
        IS_DEFAULT,
      </if>
      <if test="remark1 != null" >
        REMARK1,
      </if>
      <if test="remark2 != null" >
        REMARK2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="addressName != null" >
        #{addressName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=INTEGER},
      </if>
      <if test="remark1 != null" >
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null" >
        #{remark2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xue.order.pojo.AddressExample" resultType="java.lang.Integer" >
    select count(*) from ADDRESS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ADDRESS
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        PROVINCE = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        CITY = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.addressName != null" >
        ADDRESS_NAME = #{record.addressName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null" >
        IS_DEFAULT = #{record.isDefault,jdbcType=INTEGER},
      </if>
      <if test="record.remark1 != null" >
        REMARK1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null" >
        REMARK2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ADDRESS
    set ID = #{record.id,jdbcType=VARCHAR},
      PROVINCE = #{record.province,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      ADDRESS_NAME = #{record.addressName,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      IS_DEFAULT = #{record.isDefault,jdbcType=INTEGER},
      REMARK1 = #{record.remark1,jdbcType=VARCHAR},
      REMARK2 = #{record.remark2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>